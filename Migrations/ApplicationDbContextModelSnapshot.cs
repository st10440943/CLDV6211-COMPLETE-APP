// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CLDV6211PART_1_App.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CLDV6211_PART1_BOOKING_APP.Models.Booking", b =>
                {
                    b.Property<int>("BookingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingID"));

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EventID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VenueID")
                        .HasColumnType("int");

                    b.HasKey("BookingID");

                    b.HasIndex("EventID");

                    b.HasIndex("VenueID");

                    b.ToTable("Booking");

                    b.HasData(
                        new
                        {
                            BookingID = 1,
                            BookingDate = new DateTime(2025, 4, 15, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            EventID = 1,
                            Status = "Confirmed",
                            VenueID = 1
                        },
                        new
                        {
                            BookingID = 2,
                            BookingDate = new DateTime(2025, 4, 18, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            EventID = 2,
                            Status = "Pending",
                            VenueID = 2
                        },
                        new
                        {
                            BookingID = 3,
                            BookingDate = new DateTime(2025, 4, 20, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            EventID = 3,
                            Status = "Confirmed",
                            VenueID = 3
                        },
                        new
                        {
                            BookingID = 4,
                            BookingDate = new DateTime(2025, 4, 25, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            EventID = 4,
                            Status = "Pending",
                            VenueID = 4
                        },
                        new
                        {
                            BookingID = 5,
                            BookingDate = new DateTime(2025, 5, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            EventID = 5,
                            Status = "Confirmed",
                            VenueID = 5
                        });
                });

            modelBuilder.Entity("CLDV6211_PART1_BOOKING_APP.Models.Event", b =>
                {
                    b.Property<int>("EventID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VenueID")
                        .HasColumnType("int");

                    b.HasKey("EventID");

                    b.HasIndex("VenueID");

                    b.ToTable("Event");

                    b.HasData(
                        new
                        {
                            EventID = 1,
                            Description = "A weekend of live jazz performances by local and international artists.",
                            EventDate = new DateTime(2025, 5, 20, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "PMB Jazz Festival",
                            VenueID = 1
                        },
                        new
                        {
                            EventID = 2,
                            Description = "A major agricultural show with exhibitions, competitions, and entertainment.",
                            EventDate = new DateTime(2025, 6, 5, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Royal Show",
                            VenueID = 2
                        },
                        new
                        {
                            EventID = 3,
                            Description = "A classical music concert featuring renowned orchestras.",
                            EventDate = new DateTime(2025, 7, 10, 19, 30, 0, 0, DateTimeKind.Unspecified),
                            EventName = "City Hall Concert",
                            VenueID = 3
                        },
                        new
                        {
                            EventID = 4,
                            Description = "An exhibition showcasing the latest in science and technology.",
                            EventDate = new DateTime(2025, 8, 15, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Science Exhibition",
                            VenueID = 4
                        },
                        new
                        {
                            EventID = 5,
                            Description = "The highly anticipated rugby final at the Pietermaritzburg Oval.",
                            EventDate = new DateTime(2025, 9, 5, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Pietermaritzburg Rugby Final",
                            VenueID = 5
                        });
                });

            modelBuilder.Entity("CLDV6211_PART1_BOOKING_APP.Models.Venue", b =>
                {
                    b.Property<int>("VenueID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VenueID"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VenueName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VenueID");

                    b.ToTable("Venue");

                    b.HasData(
                        new
                        {
                            VenueID = 1,
                            Capacity = 5000,
                            ImageUrl = "http://example.com/images/cascades_mall.jpg",
                            Location = "Cascades Boulevard, Pietermaritzburg, 3201",
                            VenueName = "Cascades Shopping Mall"
                        },
                        new
                        {
                            VenueID = 2,
                            Capacity = 30000,
                            ImageUrl = "http://example.com/images/royal_showgrounds.jpg",
                            Location = "Royal Agricultural Showgrounds, Pietermaritzburg",
                            VenueName = "Royal Showgrounds"
                        },
                        new
                        {
                            VenueID = 3,
                            Capacity = 1200,
                            ImageUrl = "http://example.com/images/city_hall.jpg",
                            Location = "City Hall, Pietermaritzburg, 3201",
                            VenueName = "Pietermaritzburg City Hall"
                        },
                        new
                        {
                            VenueID = 4,
                            Capacity = 200,
                            ImageUrl = "http://example.com/images/kzn_museum.jpg",
                            Location = "237 Jabu Ndlovu Street, Pietermaritzburg",
                            VenueName = "KZN Museum"
                        },
                        new
                        {
                            VenueID = 5,
                            Capacity = 2500,
                            ImageUrl = "http://example.com/images/pmb_oval.jpg",
                            Location = "Pietermaritzburg Oval, Pietermaritzburg",
                            VenueName = "Pietermaritzburg Oval"
                        });
                });

            modelBuilder.Entity("CLDV6211_PART1_BOOKING_APP.Models.Booking", b =>
                {
                    b.HasOne("CLDV6211_PART1_BOOKING_APP.Models.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CLDV6211_PART1_BOOKING_APP.Models.Venue", "Venue")
                        .WithMany()
                        .HasForeignKey("VenueID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("Venue");
                });

            modelBuilder.Entity("CLDV6211_PART1_BOOKING_APP.Models.Event", b =>
                {
                    b.HasOne("CLDV6211_PART1_BOOKING_APP.Models.Venue", "Venue")
                        .WithMany()
                        .HasForeignKey("VenueID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Venue");
                });
#pragma warning restore 612, 618
        }
    }
}
